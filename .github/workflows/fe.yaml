name: FE Build

on:
  workflow_dispatch:

jobs:
  install-and-validate:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: pnpm

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm run lint:fe

      # - name: Tests
      #   run: pnpm run test:fe

      - name: Build
        run: pnpm run build:fe

  build-docker:
    runs-on: ubuntu-latest
    needs: install-and-validate

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          target: 'fe'
          tags: fe:latest
          outputs: type=docker,dest=/tmp/fe.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fe
          path: /tmp/fe.tar

  deploy-image:
    runs-on: ubuntu-latest
    needs: build-docker

    steps:
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get install -y openvpn openvpn-systemd-resolved

      - uses: actions/checkout@v4

      - name: Connect to VPN
        uses: kota65535/github-openvpn-connect-action@v3
        with:
          config_file: .github/workflows/client.ovpn

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: fe
          path: /tmp

      - name: Prepare SSH Key
        run: |
          echo "${{ secrets.SSH_KEY }}" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key

      - name: Copy Docker image to VM
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          VM_IP: ${{ vars.VM_IP }}
        run: |
          scp -o KexAlgorithms=ecdh-sha2-nistp521 -o 'StrictHostKeyChecking no' -i /tmp/ssh_key /tmp/fe.tar ${{ secrets.SSH_USER }}@$VM_IP:~

      - name: Deploy Docker Image on VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.VM_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker load --input ~/fe.tar
            sudo docker stop fe || echo "Container 'fe' is not running."
            sudo docker rm fe || echo "Container 'fe' does not exist."
            sudo docker run -d -p 8080:80 --name fe fe:latest
